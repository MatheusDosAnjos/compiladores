/*
20/03/2025
UFRGS - INF01147 Compiladores - 2025/1
Matheus Adam dos Anjos
*/

%{
    #include "lex.yy.h"
    #include "symbols.hpp"

    extern void yyerror(const char *s);
    extern int getLineNumber(void);
%}

%token KW_BYTE
%token KW_INT
%token KW_REAL
%token KW_IF
%token KW_ELSE
%token KW_DO
%token KW_WHILE
%token KW_READ
%token KW_PRINT
%token KW_RETURN
%token OPERATOR_LE
%token OPERATOR_GE
%token OPERATOR_EQ
%token OPERATOR_DIF
%token TK_IDENTIFIER
%token LIT_INT
%token LIT_CHAR
%token LIT_REAL
%token LIT_STRING
%token TOKEN_ERROR

%%

program: decl_list

decl_list: decl decl_list
    |
    ;

decl: var_decl ';' | func_decl
    ;

type: KW_BYTE | KW_INT | KW_REAL
    ;

value: LIT_INT | LIT_CHAR | LIT_REAL
    ;

var_def: type TK_IDENTIFIER
    ;

var_decl: var_def '=' value | array_decl ;

array_decl: var_def '[' LIT_INT ']'
    | var_def '[' LIT_INT ']' '=' array_init
    ;

array_init: value
    | value ',' array_init
    ;

func_decl: var_def '(' param_list ')'
    ;

param_list: var_def
    | var_def ',' param_list
    |
    ;

%%

void yyerror(const char *s) {
    fprintf(stderr, "Syntax error at line: %d\n", getLineNumber());
    exit(3);
}